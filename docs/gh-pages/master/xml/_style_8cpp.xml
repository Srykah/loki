<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_style_8cpp" kind="file" language="C++">
    <compoundname>Style.cpp</compoundname>
    <includes refid="_style_8hpp" local="yes">Style.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>Style.hpp</label>
        <link refid="_style_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SFML/Config.hpp</label>
      </node>
      <node id="4">
        <label>SFML/Window/WindowStyle.hpp</label>
      </node>
      <node id="1">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/window/Style.cpp</label>
        <link refid="_style_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceloki">loki</innernamespace>
    <innernamespace refid="namespaceloki_1_1window">loki::window</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Srykah </para>
</simplesect>
<simplesect kind="copyright"><para>GNU GPL v3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_style_8hpp" kindref="compound">Style.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">loki::window<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>intermediate<sp/>value<sp/>needed<sp/>because<sp/>static<sp/>objects&apos;<sp/>init<sp/>order<sp/>is<sp/>random</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">constexpr<sp/>sf::Uint32<sp/>LETTERBOXED_ZOOM_VALUE<sp/>=<sp/>1u<sp/>&lt;&lt;<sp/>10u;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>might<sp/>as<sp/>well<sp/>do<sp/>the<sp/>same<sp/>for<sp/>the<sp/>other<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">constexpr<sp/>sf::Uint32<sp/>INTEGER_ZOOM_RATIO_VALUE<sp/>=<sp/>1u<sp/>&lt;&lt;<sp/>11u;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Style<sp/>Style::NONE{sf::Style::None};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Style<sp/>Style::TITLEBAR{sf::Style::Titlebar};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Style<sp/>Style::RESIZE{sf::Style::Resize};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Style<sp/>Style::CLOSE{sf::Style::Close};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Style<sp/>Style::FULLSCREEN{sf::Style::Fullscreen};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Style<sp/>Style::LETTERBOXED_ZOOM{LETTERBOXED_ZOOM_VALUE};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Style<sp/>Style::INTEGER_ZOOM_RATIO{INTEGER_ZOOM_RATIO_VALUE};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Style<sp/>Style::DEFAULT{sf::Style::Default<sp/>|<sp/>LETTERBOXED_ZOOM_VALUE};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">Style&amp;<sp/>Style::operator|=(Style<sp/>second)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>value<sp/>|=<sp/>second.value;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">Style<sp/>Style::operator|(Style<sp/>second)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>second<sp/>|=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Style::contains(Style<sp/>flags)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value<sp/>&amp;<sp/>flags.value)<sp/>==<sp/>flags.value;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">sf::Uint32<sp/>Style::toSFMLWindowStyle()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>&amp;<sp/>(sf::Style::Titlebar<sp/>|<sp/>sf::Style::Resize<sp/>|<sp/>sf::Style::Close<sp/>|</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Style::Fullscreen);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>loki::window</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/prog/cpp/custom_libs/loki/src/loki/window/Style.cpp"/>
  </compounddef>
</doxygen>
