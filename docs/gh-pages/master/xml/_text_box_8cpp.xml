<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_text_box_8cpp" kind="file" language="C++">
    <compoundname>TextBox.cpp</compoundname>
    <includes refid="_text_box_8hpp" local="yes">TextBox.hpp</includes>
    <includes local="no">SFML/Graphics/RenderTarget.hpp</includes>
    <includes refid="_iter_adapters_8hpp" local="no">loki/common/IterAdapters.hpp</includes>
    <incdepgraph>
      <node id="6">
        <label>SFML/Graphics/Transformable.hpp</label>
      </node>
      <node id="2">
        <label>TextBox.hpp</label>
        <link refid="_text_box_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>AbstractTextBox.hpp</label>
        <link refid="_abstract_text_box_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>SFML/System/String.hpp</label>
      </node>
      <node id="5">
        <label>SFML/Graphics/Drawable.hpp</label>
      </node>
      <node id="7">
        <label>loki/styles/TextStyle.hpp</label>
        <link refid="_text_style_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>loki/common/IterAdapters.hpp</label>
        <link refid="_iter_adapters_8hpp"/>
      </node>
      <node id="13">
        <label>SFML/Graphics/RenderTarget.hpp</label>
      </node>
      <node id="3">
        <label>SFML/Graphics/Text.hpp</label>
      </node>
      <node id="12">
        <label>loki/gui/base/Widget.hpp</label>
        <link refid="_widget_8hpp"/>
      </node>
      <node id="4">
        <label>loki/gui/frame/AbstractFrame.hpp</label>
        <link refid="_abstract_frame_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
      <node id="1">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/gui/textBox/TextBox.cpp</label>
        <link refid="_text_box_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceloki">loki</innernamespace>
    <innernamespace refid="namespaceloki_1_1gui">loki::gui</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Srykah </para>
</simplesect>
<simplesect kind="copyright"><para>GNU GPL v3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_text_box_8hpp" kindref="compound">TextBox.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML/Graphics/RenderTarget.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_iter_adapters_8hpp" kindref="compound">loki/common/IterAdapters.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">loki::gui<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">TextBox::TextBox(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCount,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>styles::TextStyle<sp/>textStyle,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;AbstractFrame&gt;<sp/>frame)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>lineCount(lineCount),<sp/>textStyle(textStyle),<sp/>frame(std::move(frame))<sp/>{}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TextBox::draw(sf::RenderTarget&amp;<sp/>target,<sp/>sf::RenderStates<sp/>states)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>states.transform<sp/>*=<sp/>getTransform();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>target.draw(*frame,<sp/>states);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>line<sp/>:<sp/>lines)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>target.draw(line,<sp/>states);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TextBox::hasEnded()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TextBox::canFitInLine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::String&amp;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>sf::Text<sp/>testText;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>textStyle.applyTo(testText);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>testText.setString(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>testText.getLocalBounds().width<sp/>&lt;<sp/>frame-&gt;getInternalBounds().width;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>TextBox::getLineCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lineCount;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TextBox::setLines(std::vector&lt;sf::String&gt;<sp/>lineData)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>todo<sp/>check<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>[i,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">]<sp/>:<sp/>loki::common::enumerate(lineData))<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>lines.emplace_back(sf::Text{});</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>textStyle.applyTo(lines.back());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>lines.back().setPosition(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{frame-&gt;getInternalBounds().left,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame-&gt;getInternalBounds().top<sp/>+<sp/>textStyle.lineSpacing.value_or(1.f)<sp/>*<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(textStyle.characterSize.value_or(30.f))<sp/>*<sp/>i});</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>lines.back().setString(lineData[i]);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TextBox::clear()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>lines.clear();</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>loki::gui</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/prog/cpp/custom_libs/loki/src/loki/gui/textBox/TextBox.cpp"/>
  </compounddef>
</doxygen>
