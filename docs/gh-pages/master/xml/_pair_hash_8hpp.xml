<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_pair_hash_8hpp" kind="file" language="C++">
    <compoundname>PairHash.hpp</compoundname>
    <includes refid="_combine_hash_8hpp" local="yes">CombineHash.hpp</includes>
    <includedby refid="hash_2_all_8hpp" local="yes">D:/prog/cpp/custom_libs/loki/src/loki/hash/All.hpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>functional</label>
      </node>
      <node id="1">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/hash/PairHash.hpp</label>
        <link refid="_pair_hash_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
      <node id="2">
        <label>CombineHash.hpp</label>
        <link refid="_combine_hash_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/hash/PairHash.hpp</label>
        <link refid="_pair_hash_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/hash/All.hpp</label>
        <link refid="hash_2_all_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structloki_1_1hash_1_1_pair_hash" prot="public">loki::hash::PairHash</innerclass>
    <innerclass refid="structloki_1_1hash_1_1_pair_hash_sym" prot="public">loki::hash::PairHashSym</innerclass>
    <innerclass refid="structloki_1_1hash_1_1_pair_are_equal_sym" prot="public">loki::hash::PairAreEqualSym</innerclass>
    <innernamespace refid="namespaceloki">loki</innernamespace>
    <innernamespace refid="namespaceloki_1_1hash">loki::hash</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CombineHash.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">loki::hash<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Pair&gt;</highlight></codeline>
<codeline lineno="10" refid="structloki_1_1hash_1_1_pair_hash" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structloki_1_1hash_1_1_pair_hash" kindref="compound">PairHash</ref><sp/>{</highlight></codeline>
<codeline lineno="14" refid="structloki_1_1hash_1_1_pair_hash_1a2443fe295e4b03d69d83014c4aeee01d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structloki_1_1hash_1_1_pair_hash_1a2443fe295e4b03d69d83014c4aeee01d" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Pair&amp;<sp/>val)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>combineHash(val.first,<sp/>val.second);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>MakePairHash<sp/>=<sp/>PairHash&lt;std::pair&lt;S,<sp/>T&gt;&gt;;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Pair&gt;</highlight></codeline>
<codeline lineno="27" refid="structloki_1_1hash_1_1_pair_hash_sym" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structloki_1_1hash_1_1_pair_hash_sym" kindref="compound">PairHashSym</ref><sp/>{</highlight></codeline>
<codeline lineno="31" refid="structloki_1_1hash_1_1_pair_hash_sym_1a744088fa6f5247415a4ee9cee0289f41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structloki_1_1hash_1_1_pair_hash_sym_1a744088fa6f5247415a4ee9cee0289f41" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Pair&amp;<sp/>val)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___u_t_i_l_s___c_o_m_b_i_n_e_h_a_s_h_1ga14c2a32c34750444fca67ed0098465d2" kindref="member">combineHashSym</ref>(val.first,<sp/>val.second);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>S&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>MakePairHashSym<sp/>=<sp/>PairHashSym&lt;std::pair&lt;S,<sp/>T&gt;&gt;;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Pair1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Pair2&gt;</highlight></codeline>
<codeline lineno="45" refid="structloki_1_1hash_1_1_pair_are_equal_sym" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structloki_1_1hash_1_1_pair_are_equal_sym" kindref="compound">PairAreEqualSym</ref><sp/>{</highlight></codeline>
<codeline lineno="50" refid="structloki_1_1hash_1_1_pair_are_equal_sym_1ac38dd922dfe3842d4a68c12f3141a812" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structloki_1_1hash_1_1_pair_are_equal_sym_1ac38dd922dfe3842d4a68c12f3141a812" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Pair1&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Pair2&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lhs.first<sp/>==<sp/>rhs.first<sp/>&amp;&amp;<sp/>lhs.second<sp/>==<sp/>rhs.second)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(lhs.first<sp/>==<sp/>rhs.second<sp/>&amp;&amp;<sp/>lhs.second<sp/>==<sp/>rhs.first);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U<sp/>=<sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V<sp/>=<sp/>T&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>MakePairAreEqualSym<sp/>=<sp/>PairAreEqualSym&lt;std::pair&lt;S,<sp/>T&gt;,<sp/>std::pair&lt;U,<sp/>V&gt;&gt;;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>loki::hash</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/prog/cpp/custom_libs/loki/src/loki/hash/PairHash.hpp"/>
  </compounddef>
</doxygen>
