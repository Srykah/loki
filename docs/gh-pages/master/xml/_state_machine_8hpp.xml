<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_state_machine_8hpp" kind="file" language="C++">
    <compoundname>StateMachine.hpp</compoundname>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includes local="no">SFML/System/Time.hpp</includes>
    <includes refid="_state_index_8hpp" local="yes">StateIndex.hpp</includes>
    <includes refid="_state_8hpp" local="yes">State.hpp</includes>
    <includes refid="_transition_8hpp" local="yes">Transition.hpp</includes>
    <includedby refid="states_2_all_8hpp" local="yes">D:/prog/cpp/custom_libs/loki/src/loki/states/All.hpp</includedby>
    <includedby refid="_state_machine_8cpp" local="yes">D:/prog/cpp/custom_libs/loki/src/loki/states/StateMachine.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="8">
        <label>SFMl/System/Time.hpp</label>
      </node>
      <node id="5">
        <label>StateIndex.hpp</label>
        <link refid="_state_index_8hpp"/>
      </node>
      <node id="6">
        <label>State.hpp</label>
        <link refid="_state_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="1">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/states/StateMachine.hpp</label>
        <link refid="_state_machine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>utility</label>
      </node>
      <node id="2">
        <label>unordered_map</label>
      </node>
      <node id="9">
        <label>Transition.hpp</label>
        <link refid="_transition_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SFML/System/Time.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/states/StateMachine.hpp</label>
        <link refid="_state_machine_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/states/StateMachine.cpp</label>
        <link refid="_state_machine_8cpp"/>
      </node>
      <node id="2">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/states/All.hpp</label>
        <link refid="states_2_all_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classloki_1_1states_1_1_state_machine" prot="public">loki::states::StateMachine</innerclass>
    <innernamespace refid="namespaceloki">loki</innernamespace>
    <innernamespace refid="namespaceloki_1_1states">loki::states</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML/System/Time.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_state_index_8hpp" kindref="compound">StateIndex.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_state_8hpp" kindref="compound">State.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Transition.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">loki::states<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classloki_1_1states_1_1_state_machine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classloki_1_1states_1_1_state_machine" kindref="compound">StateMachine</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>enable_if_enum<sp/>=<sp/>std::enable_if_t&lt;std::is_enum_v&lt;T&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classloki_1_1states_1_1_state_machine" kindref="compound">StateMachine</ref>(std::size_t<sp/>size<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Enum,<sp/>enable_if_enum&lt;Enum&gt;<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classloki_1_1states_1_1_state_machine" kindref="compound">StateMachine</ref>(Enum<sp/>count)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classloki_1_1states_1_1_state_machine" kindref="compound">StateMachine</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">StateIndex</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(count))<sp/>{}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addState(StateIndex<sp/>index,<sp/><ref refid="structloki_1_1states_1_1_state" kindref="compound">State</ref><sp/>state);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Enum,<sp/>enable_if_enum&lt;Enum&gt;<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addState(Enum<sp/>e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structloki_1_1states_1_1_state" kindref="compound">State</ref>&amp;<sp/>state)<sp/>{<sp/>addState(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">StateIndex</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e),<sp/>state);<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addTransition(<ref refid="structloki_1_1states_1_1_transition" kindref="compound">Transition</ref><sp/>transition);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shrinkToFit();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCurrentState(StateIndex<sp/>index)<sp/>{<sp/>setCurrentStateWithTrigger(index);<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Enum,<sp/>enable_if_enum&lt;Enum&gt;<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCurrentState(Enum<sp/>e)<sp/>{<sp/>setCurrentStateWithTrigger(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">StateIndex</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e));<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>StateIndex<sp/>getCurrentState()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curState;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Enum,<sp/>enable_if_enum&lt;Enum&gt;<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>Enum<sp/>getCurrentState()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Enum</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(curState);<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(sf::Time<sp/>delta);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCurrentStateWithTrigger(StateIndex<sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">()&gt;&amp;<sp/>onTrigger<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkTransitions();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>StateIndex<sp/>curState<sp/>=<sp/>NONE;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>std::vector&lt;State&gt;<sp/>states;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>std::vector&lt;Transition&gt;<sp/>transitions;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/prog/cpp/custom_libs/loki/src/loki/states/StateMachine.hpp"/>
  </compounddef>
</doxygen>
