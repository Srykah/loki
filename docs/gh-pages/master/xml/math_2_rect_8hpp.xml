<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="math_2_rect_8hpp" kind="file" language="C++">
    <compoundname>Rect.hpp</compoundname>
    <includes local="no">SFML/Graphics/Rect.hpp</includes>
    <includes local="no">cmath</includes>
    <includedby refid="math_2_all_8hpp" local="yes">D:/prog/cpp/custom_libs/loki/src/loki/math/All.hpp</includedby>
    <includedby refid="_window_8cpp" local="no">D:/prog/cpp/custom_libs/loki/src/loki/window/Window.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="1">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/math/Rect.hpp</label>
        <link refid="math_2_rect_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SFML/Graphics/Rect.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/window/Window.cpp</label>
        <link refid="_window_8cpp"/>
      </node>
      <node id="1">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/math/Rect.hpp</label>
        <link refid="math_2_rect_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/math/All.hpp</label>
        <link refid="math_2_all_8hpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceloki">loki</innernamespace>
    <innernamespace refid="namespaceloki_1_1math">loki::math</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Srykah </para>
</simplesect>
<simplesect kind="copyright"><para>GNU GPL v3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML/Graphics/Rect.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">loki::math<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>component-wise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Op&gt;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>compOp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Rect&lt;T&gt;&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Rect&lt;U&gt;&amp;<sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Op&amp;<sp/>op)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Rect{op(a.left,<sp/>b.left),<sp/>op(a.top,<sp/>b.top),<sp/>op(a.width,<sp/>b.width),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op(a.height,<sp/>b.height)};</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>compMult(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Rect&lt;T&gt;&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Rect&lt;U&gt;&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Rect{a.left<sp/>*<sp/>b.left,<sp/>a.top<sp/>*<sp/>b.top,<sp/>a.width<sp/>*<sp/>b.width,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.height<sp/>*<sp/>b.height};</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>compDiv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Rect&lt;T&gt;&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Rect&lt;U&gt;&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Rect{a.left<sp/>/<sp/>b.left,<sp/>a.top<sp/>/<sp/>b.top,<sp/>a.width<sp/>/<sp/>b.width,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.height<sp/>/<sp/>b.height};</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>compMin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Rect&lt;T&gt;&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Rect&lt;U&gt;&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Rect{std::min(a.left,<sp/>b.left),<sp/>std::min(a.top,<sp/>b.top),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(a.width,<sp/>b.width),<sp/>std::min(a.height,<sp/>b.height)};</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>compMax(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Rect&lt;T&gt;&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Rect&lt;U&gt;&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Rect{std::max(a.left,<sp/>b.left),<sp/>std::max(a.top,<sp/>b.top),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max(a.width,<sp/>b.width),<sp/>std::max(a.height,<sp/>b.height)};</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>loki::math</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/prog/cpp/custom_libs/loki/src/loki/math/Rect.hpp"/>
  </compounddef>
</doxygen>
