<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_screen_8inl" kind="file" language="C++">
    <compoundname>Screen.inl</compoundname>
    <includedby refid="_screen_8hpp" local="yes">D:/prog/cpp/custom_libs/loki/src/loki/screens/Screen.hpp</includedby>
    <includedby refid="screens_2_all_8hpp" local="yes">D:/prog/cpp/custom_libs/loki/src/loki/screens/All.hpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/screens/Screen.hpp</label>
        <link refid="_screen_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/screens/ScreenStack.cpp</label>
        <link refid="_screen_stack_8cpp"/>
      </node>
      <node id="1">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/screens/Screen.inl</label>
        <link refid="_screen_8inl"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/screens/Screen.cpp</label>
        <link refid="_screen_8cpp"/>
      </node>
      <node id="4">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/screens/All.hpp</label>
        <link refid="screens_2_all_8hpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceloki">loki</innernamespace>
    <innernamespace refid="namespaceloki_1_1screens">loki::screens</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Srykah </para>
</simplesect>
<simplesect kind="copyright"><para>GNU GPL v3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">loki::screens<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Screen::registerSignalHandler(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Signal::Trigger&amp;<sp/>trigger,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(Args...)&gt;<sp/>fun)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>signalHandlers.emplace(trigger,<sp/>[fun<sp/>=<sp/>std::move(fun)](std::any<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::apply(fun,<sp/>std::any_cast&lt;std::tuple&lt;Args...&gt;&gt;(args));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Fun&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Screen::registerSignalHandler(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Signal::Trigger&amp;<sp/>trigger,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fun<sp/>fun)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>registerSignalHandler(trigger,<sp/>std::function<sp/>{<sp/>fun<sp/>});</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/prog/cpp/custom_libs/loki/src/loki/screens/Screen.inl"/>
  </compounddef>
</doxygen>
