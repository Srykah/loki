<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_vector4_8hxx" kind="file" language="C++">
    <compoundname>Vector4.hxx</compoundname>
    <includedby refid="_vector4_8hpp" local="yes">D:/prog/cpp/custom_libs/loki/src/loki/common/Vector4.hpp</includedby>
    <invincdepgraph>
      <node id="15">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/text/AnimatedText.cpp</label>
        <link refid="_animated_text_8cpp"/>
      </node>
      <node id="21">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/text/TextAnimationViewData.cpp</label>
        <link refid="_text_animation_view_data_8cpp"/>
      </node>
      <node id="8">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/sprites/All.hpp</label>
        <link refid="sprites_2_all_8hpp"/>
      </node>
      <node id="19">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/text/Stylesheet.hpp</label>
        <link refid="_stylesheet_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/sprites/Sprite.hpp</label>
        <link refid="_sprite_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/text/AnimatedTextStyle.hpp</label>
        <link refid="_animated_text_style_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/text/TextAnimationViewData.hpp</label>
        <link refid="_text_animation_view_data_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/text/AnimatedText.hpp</label>
        <link refid="_animated_text_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/anim/impl/Animator.hxx</label>
        <link refid="_animator_8hxx"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/text/Stylesheet.cpp</label>
        <link refid="_stylesheet_8cpp"/>
      </node>
      <node id="3">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/anim/AnimationViewData.hpp</label>
        <link refid="_animation_view_data_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/common/All.hpp</label>
        <link refid="common_2_all_8hpp"/>
      </node>
      <node id="2">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/common/Vector4.hpp</label>
        <link refid="_vector4_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/common/impl/Vector4.hxx</label>
        <link refid="_vector4_8hxx"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/sprites/SpriteViewData.hpp</label>
        <link refid="_sprite_view_data_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/text/impl/AnimatedGlyph.cpp</label>
        <link refid="_animated_glyph_8cpp"/>
      </node>
      <node id="5">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/anim/Animator.hpp</label>
        <link refid="_animator_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/anim/All.hpp</label>
        <link refid="anim_2_all_8hpp"/>
      </node>
      <node id="16">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/text/AnnotatedText.hpp</label>
        <link refid="_annotated_text_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/sprites/SpriteViewData.cpp</label>
        <link refid="_sprite_view_data_8cpp"/>
      </node>
      <node id="17">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/text/All.hpp</label>
        <link refid="text_2_all_8hpp"/>
      </node>
      <node id="13">
        <label>D:/prog/cpp/custom_libs/loki/src/loki/text/impl/AnimatedGlyph.hpp</label>
        <link refid="_animated_glyph_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceloki">loki</innernamespace>
    <innernamespace refid="namespaceloki_1_1common">loki::common</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Srykah </para>
</simplesect>
<simplesect kind="copyright"><para>GNU GPL v3.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">loki::common<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">Vector4&lt;T&gt;::Vector4(A&amp;&amp;<sp/>a,<sp/>B&amp;&amp;<sp/>b,<sp/>C&amp;&amp;<sp/>c,<sp/>D&amp;&amp;<sp/>d)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>a(std::forward&lt;A&gt;(a))</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>b(std::forward&lt;B&gt;(b))</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>c(std::forward&lt;C&gt;(c))</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>d(std::forward&lt;D&gt;(d))<sp/>{}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">Vector4(A<sp/>a,<sp/>B<sp/>b,<sp/>C<sp/>c,<sp/>D<sp/>d)<sp/>-&gt;<sp/>Vector4&lt;std::common_type&lt;A,<sp/>B,<sp/>C,<sp/>D&gt;&gt;;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">Vector4&lt;T&gt;::Vector4(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector4&lt;U&gt;&amp;<sp/>v)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">:<sp/>a(v.a)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">,<sp/>b(v.b)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">,<sp/>c(v.c)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">,<sp/>d(v.d)<sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">Vector4&lt;T&gt;<sp/>Vector4&lt;T&gt;::operator-()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;{-a,<sp/>-b,<sp/>-c,<sp/>-d};</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">Vector4&lt;T&gt;&amp;<sp/>Vector4&lt;T&gt;::operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector4&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>a<sp/>+=<sp/>v.a;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>b<sp/>+=<sp/>v.b;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>c<sp/>+=<sp/>v.c;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>d<sp/>+=<sp/>v.d;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">Vector4&lt;T&gt;&amp;<sp/>Vector4&lt;T&gt;::operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>+=<sp/>-v;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">Vector4&lt;T&gt;<sp/>Vector4&lt;T&gt;::operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>+=<sp/>v;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">Vector4&lt;T&gt;<sp/>Vector4&lt;T&gt;::operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>+<sp/>-v;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">Vector4&lt;T&gt;&amp;<sp/>Vector4&lt;T&gt;::operator*=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>a<sp/>*=<sp/>t;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>b<sp/>*=<sp/>t;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>c<sp/>*=<sp/>t;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>d<sp/>*=<sp/>t;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">Vector4&lt;T&gt;&amp;<sp/>Vector4&lt;T&gt;::operator/=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>a<sp/>/=<sp/>t;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>b<sp/>/=<sp/>t;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>c<sp/>/=<sp/>t;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>d<sp/>/=<sp/>t;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">Vector4&lt;T&gt;<sp/>Vector4&lt;T&gt;::operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>*=<sp/>t;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">Vector4&lt;T&gt;<sp/>operator*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">Vector4&lt;T&gt;<sp/>Vector4&lt;T&gt;::operator/(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>/=<sp/>t;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;::operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tie(a,<sp/>b,<sp/>c,<sp/>d)<sp/>==<sp/>std::tie(v.a,<sp/>v.b,<sp/>v.c,<sp/>v.d);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;::operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>v);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">Vector4&lt;T&gt;<sp/>fromRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Rect&lt;U&gt;&amp;<sp/>rect)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;(rect.left,<sp/>rect.top,<sp/>rect.width,<sp/>rect.height);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">sf::Rect&lt;U&gt;<sp/>toRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Rect&lt;U&gt;(v.a,<sp/>v.b,<sp/>v.c,<sp/>v.d);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">Vector4&lt;T&gt;<sp/>fromColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Color&amp;<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;(color.r,<sp/>color.g,<sp/>color.b,<sp/>color.a);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">sf::Color<sp/>toColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector4&lt;T&gt;&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Color(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::clamp&lt;sf::Uint8&gt;(v.a,<sp/>0,<sp/>255),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::clamp&lt;sf::Uint8&gt;(v.b,<sp/>0,<sp/>255),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::clamp&lt;sf::Uint8&gt;(v.c,<sp/>0,<sp/>255),</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::clamp&lt;sf::Uint8&gt;(v.d,<sp/>0,<sp/>255));</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/prog/cpp/custom_libs/loki/src/loki/common/impl/Vector4.hxx"/>
  </compounddef>
</doxygen>
